
===========================================================
loop iteration 0


rule tests generated:
((emit count 0 avg-size #f)
 (if-true count 0 avg-size #f)
 (par-2exit count 0 avg-size #f)
 (is-absent count 1 avg-size 37)
 (par-1exit count 1 avg-size 31)
 (set-new count 1 avg-size 23)
 (set-old count 1 avg-size 42)
 (absence count 2 avg-size 28)
 (is-present count 2 avg-size 48)
 (loop^stop-exit count 2 avg-size 7)
 (seq-done count 2 avg-size 3)
 (seq-exit count 2 avg-size 6)
 (shared count 3 avg-size 33)
 (if-false count 4 avg-size 37)
 (set-var count 4 avg-size 28)
 (par-nothing count 5 avg-size 7)
 (suspend count 10 avg-size 3)
 (var count 10 avg-size 41)
 (trap count 14 avg-size 2)
 (merge count 22 avg-size 46)
 (loop count 37 avg-size 8)
 (signal count 40 avg-size 6)
 (par-swap count 57 avg-size 20)
 (readyness count 105 avg-size 36))

agda finished

===========================================================
loop iteration 1


rule tests generated:
((emit count 0 avg-size #f)
 (if-true count 1 avg-size 47)
 (is-absent count 1 avg-size 37)
 (par-1exit count 1 avg-size 31)
 (par-2exit count 1 avg-size 5)
 (set-new count 2 avg-size 27)
 (is-present count 3 avg-size 41)
 (loop^stop-exit count 3 avg-size 7)
 (set-old count 3 avg-size 30)
 (if-false count 4 avg-size 37)
 (seq-exit count 5 avg-size 11)
 (shared count 5 avg-size 25)
 (absence count 6 avg-size 28)
 (seq-done count 6 avg-size 6)
 (set-var count 6 avg-size 27)
 (par-nothing count 9 avg-size 8)
 (var count 15 avg-size 38)
 (suspend count 20 avg-size 3)
 (trap count 22 avg-size 2)
 (merge count 46 avg-size 41)
 (signal count 64 avg-size 6)
 (loop count 85 avg-size 8)
 (par-swap count 101 avg-size 18)
 (readyness count 206 avg-size 35))

agda finished

===========================================================
loop iteration 2


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 1 avg-size 37)
 (par-2exit count 1 avg-size 5)
 (is-present count 3 avg-size 41)
 (par-1exit count 3 avg-size 17)
 (set-new count 3 avg-size 26)
 (set-old count 3 avg-size 30)
 (if-true count 4 avg-size 49)
 (loop^stop-exit count 4 avg-size 8)
 (if-false count 7 avg-size 41)
 (seq-exit count 7 avg-size 11)
 (set-var count 7 avg-size 26)
 (absence count 11 avg-size 22)
 (shared count 11 avg-size 38)
 (par-nothing count 12 avg-size 8)
 (seq-done count 14 avg-size 6)
 (var count 24 avg-size 40)
 (trap count 27 avg-size 2)
 (suspend count 29 avg-size 3)
 (merge count 65 avg-size 43)
 (signal count 109 avg-size 7)
 (loop count 117 avg-size 7)
 (par-swap count 153 avg-size 19)
 (readyness count 317 avg-size 36))

agda finished

===========================================================
loop iteration 3


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 1 avg-size 37)
 (par-2exit count 2 avg-size 5)
 (is-present count 3 avg-size 41)
 (par-1exit count 3 avg-size 17)
 (set-old count 3 avg-size 30)
 (set-new count 4 avg-size 25)
 (if-true count 5 avg-size 47)
 (loop^stop-exit count 5 avg-size 8)
 (seq-exit count 7 avg-size 11)
 (if-false count 8 avg-size 44)
 (set-var count 11 avg-size 25)
 (absence count 14 avg-size 23)
 (par-nothing count 16 avg-size 9)
 (seq-done count 16 avg-size 7)
 (shared count 17 avg-size 35)
 (var count 33 avg-size 40)
 (trap count 35 avg-size 2)
 (suspend count 43 avg-size 3)
 (merge count 87 avg-size 44)
 (signal count 156 avg-size 7)
 (loop count 164 avg-size 7)
 (par-swap count 207 avg-size 20)
 (readyness count 429 avg-size 36))

agda finished

===========================================================
loop iteration 4


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 1 avg-size 37)
 (par-2exit count 2 avg-size 5)
 (is-present count 3 avg-size 41)
 (par-1exit count 3 avg-size 17)
 (set-new count 4 avg-size 25)
 (set-old count 4 avg-size 28)
 (if-true count 5 avg-size 47)
 (loop^stop-exit count 5 avg-size 8)
 (if-false count 8 avg-size 44)
 (seq-exit count 8 avg-size 12)
 (set-var count 13 avg-size 25)
 (seq-done count 20 avg-size 6)
 (par-nothing count 22 avg-size 7)
 (shared count 22 avg-size 36)
 (absence count 24 avg-size 27)
 (var count 37 avg-size 41)
 (trap count 43 avg-size 2)
 (suspend count 55 avg-size 3)
 (merge count 105 avg-size 44)
 (signal count 197 avg-size 7)
 (loop count 204 avg-size 7)
 (par-swap count 264 avg-size 20)
 (readyness count 510 avg-size 36))

agda finished

===========================================================
loop iteration 5


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 1 avg-size 37)
 (is-present count 3 avg-size 41)
 (par-2exit count 3 avg-size 5)
 (par-1exit count 4 avg-size 19)
 (loop^stop-exit count 5 avg-size 8)
 (set-old count 5 avg-size 34)
 (set-new count 6 avg-size 24)
 (if-true count 8 avg-size 44)
 (if-false count 11 avg-size 49)
 (seq-exit count 12 avg-size 10)
 (set-var count 16 avg-size 23)
 (absence count 27 avg-size 25)
 (seq-done count 27 avg-size 7)
 (par-nothing count 28 avg-size 7)
 (shared count 28 avg-size 34)
 (var count 43 avg-size 40)
 (trap count 51 avg-size 2)
 (suspend count 66 avg-size 3)
 (merge count 122 avg-size 45)
 (signal count 240 avg-size 7)
 (loop count 250 avg-size 7)
 (par-swap count 313 avg-size 20)
 (readyness count 617 avg-size 36))

agda finished

===========================================================
loop iteration 6


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 2 avg-size 42)
 (is-present count 3 avg-size 41)
 (par-2exit count 3 avg-size 5)
 (loop^stop-exit count 5 avg-size 8)
 (par-1exit count 5 avg-size 17)
 (set-old count 5 avg-size 34)
 (set-new count 7 avg-size 24)
 (if-true count 9 avg-size 48)
 (if-false count 12 avg-size 48)
 (seq-exit count 12 avg-size 10)
 (set-var count 18 avg-size 23)
 (seq-done count 28 avg-size 7)
 (absence count 31 avg-size 26)
 (shared count 32 avg-size 32)
 (par-nothing count 33 avg-size 6)
 (var count 49 avg-size 39)
 (trap count 58 avg-size 2)
 (suspend count 69 avg-size 3)
 (merge count 138 avg-size 45)
 (signal count 268 avg-size 8)
 (loop count 287 avg-size 7)
 (par-swap count 356 avg-size 19)
 (readyness count 718 avg-size 36))

agda finished

===========================================================
loop iteration 7


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 2 avg-size 42)
 (is-present count 3 avg-size 41)
 (par-2exit count 3 avg-size 5)
 (loop^stop-exit count 5 avg-size 8)
 (par-1exit count 5 avg-size 17)
 (set-new count 7 avg-size 24)
 (set-old count 7 avg-size 31)
 (if-true count 9 avg-size 48)
 (if-false count 13 avg-size 48)
 (seq-exit count 13 avg-size 10)
 (set-var count 22 avg-size 25)
 (seq-done count 31 avg-size 6)
 (par-nothing count 35 avg-size 6)
 (shared count 39 avg-size 33)
 (absence count 42 avg-size 28)
 (var count 60 avg-size 39)
 (trap count 64 avg-size 2)
 (suspend count 83 avg-size 3)
 (merge count 161 avg-size 45)
 (signal count 309 avg-size 7)
 (loop count 329 avg-size 7)
 (par-swap count 413 avg-size 20)
 (readyness count 830 avg-size 36))

agda finished

===========================================================
loop iteration 8


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 2 avg-size 42)
 (is-present count 3 avg-size 41)
 (par-2exit count 4 avg-size 5)
 (par-1exit count 5 avg-size 17)
 (loop^stop-exit count 6 avg-size 7)
 (set-old count 8 avg-size 31)
 (if-true count 9 avg-size 48)
 (set-new count 9 avg-size 24)
 (if-false count 13 avg-size 48)
 (seq-exit count 14 avg-size 10)
 (set-var count 26 avg-size 25)
 (seq-done count 38 avg-size 7)
 (par-nothing count 42 avg-size 6)
 (shared count 44 avg-size 33)
 (absence count 46 avg-size 29)
 (var count 62 avg-size 39)
 (trap count 67 avg-size 2)
 (suspend count 92 avg-size 3)
 (merge count 182 avg-size 45)
 (signal count 341 avg-size 7)
 (loop count 363 avg-size 7)
 (par-swap count 459 avg-size 20)
 (readyness count 946 avg-size 35))

agda finished

===========================================================
loop iteration 9


rule tests generated:
((emit count 1 avg-size 42)
 (is-absent count 2 avg-size 42)
 (is-present count 3 avg-size 41)
 (par-1exit count 5 avg-size 17)
 (par-2exit count 5 avg-size 5)
 (loop^stop-exit count 7 avg-size 9)
 (set-old count 8 avg-size 31)
 (set-new count 9 avg-size 24)
 (if-true count 11 avg-size 48)
 (if-false count 13 avg-size 48)
 (seq-exit count 14 avg-size 10)
 (set-var count 28 avg-size 25)
 (par-nothing count 48 avg-size 6)
 (seq-done count 49 avg-size 7)
 (shared count 51 avg-size 34)
 (absence count 54 avg-size 27)
 (var count 71 avg-size 39)
 (trap count 77 avg-size 2)
 (suspend count 103 avg-size 3)
 (merge count 199 avg-size 45)
 (signal count 367 avg-size 8)
 (loop count 405 avg-size 7)
 (par-swap count 513 avg-size 20)
 (readyness count 1056 avg-size 35))

agda finished

===========================================================
loop iteration 10


rule tests generated:
((emit count 2 avg-size 28)
 (is-absent count 2 avg-size 42)
 (is-present count 3 avg-size 41)
 (par-1exit count 5 avg-size 17)
 (loop^stop-exit count 7 avg-size 9)
 (par-2exit count 7 avg-size 5)
 (set-new count 9 avg-size 24)
 (set-old count 9 avg-size 31)
 (if-true count 12 avg-size 48)
 (if-false count 14 avg-size 47)
 (seq-exit count 14 avg-size 10)
 (set-var count 31 avg-size 25)
 (par-nothing count 55 avg-size 6)
 (seq-done count 56 avg-size 8)
 (absence count 58 avg-size 27)
 (shared count 60 avg-size 33)
 (var count 80 avg-size 39)
 (trap count 89 avg-size 2)
 (suspend count 116 avg-size 3)
 (merge count 214 avg-size 45)
 (signal count 418 avg-size 7)
 (loop count 438 avg-size 7)
 (par-swap count 568 avg-size 19)
 (readyness count 1159 avg-size 35))

agda finished

===========================================================
loop iteration 11


rule tests generated:
((is-absent count 2 avg-size 42)
 (emit count 3 avg-size 30)
 (is-present count 3 avg-size 41)
 (par-1exit count 6 avg-size 18)
 (loop^stop-exit count 9 avg-size 8)
 (par-2exit count 9 avg-size 5)
 (set-new count 10 avg-size 24)
 (set-old count 11 avg-size 32)
 (if-true count 13 avg-size 50)
 (if-false count 15 avg-size 46)
 (seq-exit count 15 avg-size 10)
 (set-var count 32 avg-size 25)
 (absence count 59 avg-size 27)
 (seq-done count 59 avg-size 8)
 (par-nothing count 62 avg-size 6)
 (shared count 63 avg-size 33)
 (var count 88 avg-size 38)
 (trap count 100 avg-size 2)
 (suspend count 127 avg-size 3)
 (merge count 232 avg-size 45)
 (signal count 460 avg-size 7)
 (loop count 484 avg-size 7)
 (par-swap count 623 avg-size 19)
 (readyness count 1253 avg-size 36))

agda finished

===========================================================
loop iteration 12


rule tests generated:
((emit count 3 avg-size 30)
 (is-absent count 3 avg-size 54)
 (is-present count 3 avg-size 41)
 (par-1exit count 7 avg-size 20)
 (loop^stop-exit count 9 avg-size 8)
 (par-2exit count 10 avg-size 5)
 (set-new count 10 avg-size 24)
 (set-old count 11 avg-size 32)
 (if-true count 15 avg-size 50)
 (seq-exit count 15 avg-size 10)
 (if-false count 16 avg-size 47)
 (set-var count 33 avg-size 25)
 (absence count 64 avg-size 28)
 (seq-done count 66 avg-size 8)
 (shared count 68 avg-size 33)
 (par-nothing count 69 avg-size 6)
 (var count 95 avg-size 39)
 (trap count 103 avg-size 2)
 (suspend count 141 avg-size 3)
 (merge count 251 avg-size 45)
 (signal count 490 avg-size 8)
 (loop count 531 avg-size 7)
 (par-swap count 679 avg-size 20)
 (readyness count 1359 avg-size 36))

agda finished

===========================================================
loop iteration 13


rule tests generated:
((emit count 3 avg-size 30)
 (is-absent count 3 avg-size 54)
 (is-present count 3 avg-size 41)
 (par-1exit count 7 avg-size 20)
 (loop^stop-exit count 9 avg-size 8)
 (par-2exit count 10 avg-size 5)
 (set-new count 10 avg-size 24)
 (set-old count 11 avg-size 32)
 (if-true count 15 avg-size 50)
 (seq-exit count 15 avg-size 10)
 (if-false count 17 avg-size 46)
 (set-var count 38 avg-size 25)
 (absence count 68 avg-size 28)
 (seq-done count 71 avg-size 8)
 (par-nothing count 73 avg-size 6)
 (shared count 74 avg-size 33)
 (var count 99 avg-size 39)
 (trap count 108 avg-size 2)
 (suspend count 151 avg-size 3)
 (merge count 264 avg-size 46)
 (signal count 522 avg-size 8)
 (loop count 559 avg-size 7)
 (par-swap count 724 avg-size 20)
 (readyness count 1454 avg-size 36))

agda finished

===========================================================
loop iteration 14


rule tests generated:
((emit count 3 avg-size 30)
 (is-absent count 3 avg-size 54)
 (is-present count 3 avg-size 41)
 (par-1exit count 7 avg-size 20)
 (loop^stop-exit count 9 avg-size 8)
 (par-2exit count 10 avg-size 5)
 (set-new count 11 avg-size 27)
 (set-old count 11 avg-size 32)
 (if-true count 15 avg-size 50)
 (if-false count 17 avg-size 46)
 (seq-exit count 17 avg-size 10)
 (set-var count 41 avg-size 25)
 (par-nothing count 76 avg-size 5)
 (absence count 79 avg-size 28)
 (shared count 79 avg-size 32)
 (seq-done count 80 avg-size 8)
 (var count 109 avg-size 38)
 (trap count 123 avg-size 2)
 (suspend count 162 avg-size 3)
 (merge count 281 avg-size 46)
 (signal count 565 avg-size 8)
 (loop count 610 avg-size 7)
 (par-swap count 790 avg-size 20)
 (readyness count 1543 avg-size 36))

agda finished

===========================================================
loop iteration 15


rule tests generated:
((emit count 3 avg-size 30)
 (is-present count 3 avg-size 41)
 (is-absent count 5 avg-size 48)
 (par-1exit count 8 avg-size 19)
 (loop^stop-exit count 9 avg-size 8)
 (par-2exit count 10 avg-size 5)
 (set-old count 11 avg-size 32)
 (set-new count 12 avg-size 27)
 (if-true count 15 avg-size 50)
 (if-false count 18 avg-size 46)
 (seq-exit count 18 avg-size 10)
 (set-var count 42 avg-size 25)
 (par-nothing count 80 avg-size 5)
 (absence count 82 avg-size 27)
 (shared count 84 avg-size 32)
 (seq-done count 86 avg-size 8)
 (var count 116 avg-size 38)
 (trap count 134 avg-size 2)
 (suspend count 171 avg-size 3)
 (merge count 299 avg-size 46)
 (signal count 619 avg-size 8)
 (loop count 666 avg-size 7)
 (par-swap count 845 avg-size 20)
 (readyness count 1638 avg-size 36))

agda: Codec.Compression.Zlib: premature end of compressed data stream
run-agda: failed
  context...:
   <THIS-ARTIFACT>/cross-tests/send-lib.rkt:306:0: run-agda
   <THIS-ARTIFACT>/cross-tests/redex-model-implies-agda-model.rkt:39:5: for-loop
   <THIS-ARTIFACT>/cross-tests/redex-model-implies-agda-model.rkt:34:0: main
   (submod <THIS-ARTIFACT>/cross-tests/redex-model-implies-agda-model.rkt main): [running body]
